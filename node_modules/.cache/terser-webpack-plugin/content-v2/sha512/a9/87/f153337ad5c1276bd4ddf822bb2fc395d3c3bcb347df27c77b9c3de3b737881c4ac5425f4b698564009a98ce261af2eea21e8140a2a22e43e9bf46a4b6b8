{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{952:function(a,e,n){\"use strict\";n.r(e);var s=n(43),t=Object(s.a)({},(function(){var a=this,e=a.$createElement,n=a._self._c||e;return n(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[n(\"h1\",{attrs:{id:\"node-js-npm-使用介绍\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#node-js-npm-使用介绍\"}},[a._v(\"#\")]),a._v(\" Node.js NPM 使用介绍\")]),a._v(\" \"),n(\"h2\",{attrs:{id:\"npm-使用介绍\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#npm-使用介绍\"}},[a._v(\"#\")]),a._v(\" NPM 使用介绍\")]),a._v(\" \"),n(\"p\",[a._v(\"本文介绍了 Node.js 中 NPM 的使用，我们先来了解什么是 NPM。\")]),a._v(\" \"),n(\"p\",[a._v(\"NPM是随同NodeJS一起安装的包管理工具，能解决NodeJS代码部署上的很多问题，常见的使用场景有以下几种：\")]),a._v(\" \"),n(\"ul\",[n(\"li\",[a._v(\"允许用户从NPM服务器下载别人编写的第三方包到本地使用。\")]),a._v(\" \"),n(\"li\",[a._v(\"允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。\")]),a._v(\" \"),n(\"li\",[a._v(\"允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。\")])]),a._v(\" \"),n(\"p\",[a._v(\"由于新版的nodejs已经集成了npm，所以之前npm也一并安装好了。同样可以通过输入\")]),a._v(\" \"),n(\"p\",[n(\"strong\",[a._v('\"npm -v\"')])]),a._v(\" \"),n(\"p\",[a._v(\"来测试是否成功安装。命令如下，出现版本提示表示安装成功:\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"$ npm -v\\n2.3.0\\n\")])])]),n(\"p\",[a._v(\"如果你安装的是旧版本的 npm，可以很容易得通过 npm 命令来升级，命令如下：\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"$ sudo npm install npm -g\\n/usr/local/bin/npm -> /usr/local/lib/node_modules/npm/bin/npm-cli.js\\nnpm@2.14.2 /usr/local/lib/node_modules/npm\\n\")])])]),n(\"p\",[a._v(\"如果是 Window 系统使用以下命令即可：\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"npm install npm -g\\n\")])])]),n(\"hr\"),a._v(\" \"),n(\"h2\",{attrs:{id:\"全局安装与本地安装\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#全局安装与本地安装\"}},[a._v(\"#\")]),a._v(\" 全局安装与本地安装\")]),a._v(\" \"),n(\"p\",[a._v(\"npm 的包安装分为本地安装（local）、全局安装（global）两种，从敲的命令行来看，差别只是有没有-g而已，比如\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"npm install express          # 本地安装\\nnpm install express -g   # 全局安装\\n\")])])]),n(\"p\",[a._v(\"如果出现以下错误：\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"npm err! Error: connect ECONNREFUSED 127.0.0.1:8087 \\n\")])])]),n(\"p\",[a._v(\"解决办法为：\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"$ npm config set proxy null\\n\")])])]),n(\"h3\",{attrs:{id:\"本地安装\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#本地安装\"}},[a._v(\"#\")]),a._v(\" 本地安装\")]),a._v(\" \"),n(\"ul\",[n(\"li\",[a._v(\"\\\\1. 将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有 node_modules 目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。\")]),a._v(\" \"),n(\"li\",[a._v(\"\\\\2. 可以通过 require() 来引入本地安装的包。\")])]),a._v(\" \"),n(\"h3\",{attrs:{id:\"全局安装\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#全局安装\"}},[a._v(\"#\")]),a._v(\" 全局安装\")]),a._v(\" \"),n(\"ul\",[n(\"li\",[a._v(\"\\\\1. 将安装包放在 /usr/local 下或者你 node 的安装目录。\")]),a._v(\" \"),n(\"li\",[a._v(\"\\\\2. 可以直接在命令行里使用。\")])]),a._v(\" \"),n(\"p\",[a._v(\"如果你希望具备两者功能，则需要在两个地方安装它或使用 npm link。\")]),a._v(\" \"),n(\"h2\",{attrs:{id:\"npm-应用\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#npm-应用\"}},[a._v(\"#\")]),a._v(\" NPM 应用\")]),a._v(\" \"),n(\"p\",[a._v(\"NPM建立了一个NodeJS生态圈，NodeJS开发者和用户可以在里边互通有无。以下介绍NPM应用的三种场景：\")]),a._v(\" \"),n(\"h3\",{attrs:{id:\"下载第三方包\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#下载第三方包\"}},[a._v(\"#\")]),a._v(\" 下载第三方包\")]),a._v(\" \"),n(\"p\",[a._v(\"我们可以使用以下命令来下载第三方包。\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"$ npm install argv\\n...\\nargv@0.0.2 node_modules\\\\argv\\n\")])])]),n(\"p\",[a._v(\"下载好之后，argv包就放在了工程目录下的node_modules目录中，因此在代码中只需要通过require('argv')的方式就好，无需指定第三方包路径。\")]),a._v(\" \"),n(\"p\",[a._v(\"以上命令默认下载最新版第三方包，如果想要下载指定版本的话，可以在包名后边加上@\"),n(\"version\",[a._v(\"，例如通过以下命令可下载0.0.1版的argv。\")])],1),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"$ npm install argv@0.0.1\\n...\\nargv@0.0.1 node_modules\\\\argv\\n\")])])]),n(\"p\",[a._v(\"NPM对package.json的字段做了扩展，允许在其中申明第三方包依赖。因此，上边例子中的package.json可以改写如下：\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v('{\\n    \"name\": \"node-echo\",\\n    \"main\": \"./lib/echo.js\",\\n    \"dependencies\": {\\n        \"argv\": \"0.0.2\"\\n    }\\n}\\n')])])]),n(\"p\",[a._v(\"这样处理后，在工程目录下就可以使用npm install命令批量安装第三方包了。\")]),a._v(\" \"),n(\"p\",[a._v(\"更重要的是，当以后node-echo也上传到了NPM服务器，别人下载这个包时，NPM会根据包中申明的第三方包依赖自动下载进一步依赖的第三方包。\")]),a._v(\" \"),n(\"p\",[a._v(\"例如，使用npm install node-echo命令时，NPM会自动创建以下目录结构。\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"- project/\\n    - node_modules/\\n        - node-echo/\\n            - node_modules/\\n                + argv/\\n            ...\\n    ...\\n\")])])]),n(\"p\",[a._v(\"如此一来，用户只需关心自己直接使用的第三方包，不需要自己去解决所有包的依赖关系。\")]),a._v(\" \"),n(\"h3\",{attrs:{id:\"安装命令行程序\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装命令行程序\"}},[a._v(\"#\")]),a._v(\" 安装命令行程序\")]),a._v(\" \"),n(\"p\",[a._v(\"从NPM服务上下载安装一个命令行程序的方法与第三方包类似。\")]),a._v(\" \"),n(\"p\",[a._v(\"例如上例中的node-echo提供了命令行使用方式，只要node-echo自己配置好了相关的package.json字段，对于用户而言，只需要使用以下命令安装程序。\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"$ npm install node-echo -g\\n\")])])]),n(\"p\",[a._v(\"参数中的-g表示全局安装，因此node-echo会默认安装到以下位置，并且NPM会自动创建好Linux系统下需要的软链文件或Windows系统下需要的.cmd文件。\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"- /usr/local/               # Linux系统下\\n    - lib/node_modules/\\n        + node-echo/\\n        ...\\n    - bin/\\n        node-echo\\n        ...\\n    ...\\n\\n- %APPDATA%\\\\npm\\\\            # Windows系统下\\n    - node_modules\\\\\\n        + node-echo\\\\\\n        ...\\n    node-echo.cmd\\n    ...\\n\")])])]),n(\"h3\",{attrs:{id:\"发布代码\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#发布代码\"}},[a._v(\"#\")]),a._v(\" 发布代码\")]),a._v(\" \"),n(\"p\",[a._v(\"第一次使用NPM发布代码前需要注册一个账号。终端下运行npm adduser，之后按照提示做即可。\")]),a._v(\" \"),n(\"p\",[a._v(\"账号注册完成后，接着我们需要编辑package.json文件，加入NPM必需的字段。接着上边node-echo的例子，package.json里必要的字段如下。\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v('{\\n    \"name\": \"node-echo\",           # 包名，在NPM服务器上须要保持唯一\\n    \"version\": \"1.0.0\",            # 当前版本号\\n    \"dependencies\": {              # 第三方包依赖，需要指定包名和版本号\\n        \"argv\": \"0.0.2\"\\n      },\\n    \"main\": \"./lib/echo.js\",       # 入口模块位置\\n    \"bin\" : {\\n        \"node-echo\": \"./bin/node-echo\"      # 命令行程序名和主模块位置\\n    }\\n}\\n')])])]),n(\"p\",[a._v(\"之后，我们就可以在package.json所在目录下运行npm publish发布代码了。\")]),a._v(\" \"),n(\"hr\"),a._v(\" \"),n(\"h2\",{attrs:{id:\"版本号\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#版本号\"}},[a._v(\"#\")]),a._v(\" 版本号\")]),a._v(\" \"),n(\"p\",[a._v(\"使用NPM下载和发布代码时都会接触到版本号。NPM使用语义版本号来管理代码，这里简单介绍一下。\")]),a._v(\" \"),n(\"p\",[a._v(\"语义版本号分为X.Y.Z三位，分别代表主版本号、次版本号和补丁版本号。当代码变更时，版本号按以下原则更新。\")]),a._v(\" \"),n(\"ul\",[n(\"li\",[a._v(\"如果只是修复bug，需要更新Z位。\")]),a._v(\" \"),n(\"li\",[a._v(\"如果是新增了功能，但是向下兼容，需要更新Y位。\")]),a._v(\" \"),n(\"li\",[a._v(\"如果有大变动，向下不兼容，需要更新X位。\")])]),a._v(\" \"),n(\"p\",[a._v('版本号有了这个保证后，在申明第三方包依赖时，除了可依赖于一个固定版本号外，还可依赖于某个范围的版本号。例如\"argv\": \"0.0.x\"表示依赖于0.0.x系列的最新版argv。')]),a._v(\" \"),n(\"p\",[a._v(\"NPM支持的所有版本号范围指定方式可以查看\"),n(\"a\",{attrs:{href:\"https://npmjs.org/doc/files/package.json.html#dependencies\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"官方文档\"),n(\"OutboundLink\")],1),a._v(\"。\")]),a._v(\" \"),n(\"hr\"),a._v(\" \"),n(\"h2\",{attrs:{id:\"npm常用命令\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#npm常用命令\"}},[a._v(\"#\")]),a._v(\" NPM常用命令\")]),a._v(\" \"),n(\"p\",[a._v(\"除了本章介绍的部分外，NPM还提供了很多功能，package.json里也有很多其它有用的字段。\")]),a._v(\" \"),n(\"p\",[a._v(\"除了可以在\"),n(\"a\",{attrs:{href:\"https://npmjs.org/doc/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[a._v(\"npmjs.org/doc/\"),n(\"OutboundLink\")],1),a._v(\"查看官方文档外，这里再介绍一些NPM常用命令。\")]),a._v(\" \"),n(\"p\",[a._v(\"NPM提供了很多命令，例如install和publish，使用npm help可查看所有命令。\")]),a._v(\" \"),n(\"ul\",[n(\"li\",[a._v(\"NPM提供了很多命令，例如\"),n(\"code\",[a._v(\"install\")]),a._v(\"和\"),n(\"code\",[a._v(\"publish\")]),a._v(\"，使用\"),n(\"code\",[a._v(\"npm help\")]),a._v(\"可查看所有命令。\")]),a._v(\" \"),n(\"li\",[a._v(\"使用\"),n(\"code\",[a._v(\"npm help\")]),a._v(\"可查看某条命令的详细帮助，例如\"),n(\"code\",[a._v(\"npm help install\")]),a._v(\"。\")]),a._v(\" \"),n(\"li\",[a._v(\"在\"),n(\"code\",[a._v(\"package.json\")]),a._v(\"所在目录下使用\"),n(\"code\",[a._v(\"npm install . -g\")]),a._v(\"可先在本地安装当前命令行程序，可用于发布前的本地测试。\")]),a._v(\" \"),n(\"li\",[a._v(\"使用\"),n(\"code\",[a._v(\"npm update\")]),a._v(\"可以把当前目录下\"),n(\"code\",[a._v(\"node_modules\")]),a._v(\"子目录里边的对应模块更新至最新版本。\")]),a._v(\" \"),n(\"li\",[a._v(\"使用\"),n(\"code\",[a._v(\"npm update -g\")]),a._v(\"可以把全局安装的对应命令行程序更新至最新版。\")]),a._v(\" \"),n(\"li\",[a._v(\"使用\"),n(\"code\",[a._v(\"npm cache clear\")]),a._v(\"可以清空NPM本地缓存，用于对付使用相同版本号发布新版本代码的人。\")]),a._v(\" \"),n(\"li\",[a._v(\"使用\"),n(\"code\",[a._v(\"npm unpublish @\")]),a._v(\"可以撤销发布自己发布过的某个版本代码。\")])]),a._v(\" \"),n(\"h3\",{attrs:{id:\"cnpm命令行工具代替npm\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#cnpm命令行工具代替npm\"}},[a._v(\"#\")]),a._v(\" cnpm命令行工具代替npm\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"npm install -g cnpm --registry=https://registry.npm.taobao.org\\n\")])])]),n(\"h3\",{attrs:{id:\"命令行设置将npm修改为淘宝镜像源\"}},[n(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#命令行设置将npm修改为淘宝镜像源\"}},[a._v(\"#\")]),a._v(\" 命令行设置将npm修改为淘宝镜像源\")]),a._v(\" \"),n(\"div\",{staticClass:\"language- extra-class\"},[n(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[n(\"code\",[a._v(\"npm config set registry https://registry.npm.taobao.org\\n\")])])])])}),[],!1,null,null,null);e.default=t.exports}}]);","extractedComments":[]}