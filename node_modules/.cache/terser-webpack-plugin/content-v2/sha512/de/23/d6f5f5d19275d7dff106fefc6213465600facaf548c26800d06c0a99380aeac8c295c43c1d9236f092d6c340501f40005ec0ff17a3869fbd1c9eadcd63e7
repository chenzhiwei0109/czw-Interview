{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{569:function(t,s,a){t.exports=a.p+\"assets/img/1589982146465.88de8f08.png\"},570:function(t,s,a){t.exports=a.p+\"assets/img/image-20200611151714753.6428f1e3.png\"},571:function(t,s,a){t.exports=a.p+\"assets/img/image-20200611153109676.8937c3a9.png\"},572:function(t,s,a){t.exports=a.p+\"assets/img/image-20200611154332124.9999c0b4.png\"},900:function(t,s,a){\"use strict\";a.r(s);var e=a(43),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[e(\"h1\",{attrs:{id:\"js概念题\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js概念题\"}},[t._v(\"#\")]),t._v(\" JS概念题\")]),t._v(\" \"),e(\"p\"),e(\"div\",{staticClass:\"table-of-contents\"},[e(\"ul\",[e(\"li\",[e(\"a\",{attrs:{href:\"#为什么js是单线程的？\"}},[t._v(\"为什么JS是单线程的？\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#数据类型有哪些？\"}},[t._v(\"数据类型有哪些？\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#typeof\"}},[t._v(\"typeof\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#转换类型的转换方法\"}},[t._v(\"转换类型的转换方法\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#类型转换\"}},[t._v(\"类型转换\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#null和undefined的区别\"}},[t._v(\"null和undefined的区别?\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#如何判断数据类型\"}},[t._v(\"如何判断数据类型?\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#js隐式装箱\"}},[t._v(\"JS隐式装箱\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#判等-https-developer-mozilla-org-zh-cn-docs-web-javascript-equality-comparisons-and-sameness\"}},[t._v(\"判等\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#循环方法有哪些？\"}},[t._v(\"循环方法有哪些？\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#谈谈你对作用域链的理解\"}},[t._v(\"谈谈你对作用域链的理解?\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#闭包是什么？\"}},[t._v(\"闭包是什么？\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#\"}})]),e(\"li\",[e(\"a\",{attrs:{href:\"#原型以及原型链\"}},[t._v(\"原型以及原型链\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#面向对象多态是指的什么\"}},[t._v(\"面向对象多态是指的什么\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#this指向问题\"}},[t._v(\"this指向问题\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#dom\"}},[t._v(\"DOM\")]),e(\"ul\",[e(\"li\",[e(\"a\",{attrs:{href:\"#什么是dom？\"}},[t._v(\"什么是DOM？\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#dom操作有什么问题？如何高效操作dom？\"}},[t._v(\"DOM操作有什么问题？如何高效操作DOM？\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#dom事件操作优化\"}},[t._v(\"DOM事件操作优化\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#获取元素方法\"}},[t._v(\"获取元素方法\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#节点操作\"}},[t._v(\"节点操作\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#dom-回流、重绘\"}},[t._v(\"DOM 回流、重绘\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#js盒子模型\"}},[t._v(\"JS盒子模型\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#dom事件标准\"}},[t._v(\"DOM事件标准\")])])])]),e(\"li\",[e(\"a\",{attrs:{href:\"#event对象的常见应用是什么？\"}},[t._v(\"Event对象的常见应用是什么？\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#你会自定义事件吗？\"}},[t._v(\"你会自定义事件吗？\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#document-write-和innerhtml区别\"}},[t._v(\"document.write()和innerHTML区别\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#面向对象是什么？\"}},[t._v(\"面向对象是什么？\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#数组常用方法有哪些？\"}},[t._v(\"数组常用方法有哪些？\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#_0-1-0-2\"}},[t._v(\"0.1+0.2 =?\")])]),e(\"li\",[e(\"a\",{attrs:{href:\"#\"}})])])]),t._v(\"\\n[TOC]\"),e(\"p\"),t._v(\" \"),e(\"h2\",{attrs:{id:\"为什么js是单线程的？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么js是单线程的？\"}},[t._v(\"#\")]),t._v(\" 为什么JS是单线程的？\")]),t._v(\" \"),e(\"p\",[t._v(\"进程里有多个线程，浏览器是多进程的\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"strong\",[t._v(\"进程中的任意一线程执行出错，都会导致整个进程的崩溃。\")])]),t._v(\" \"),e(\"li\",[e(\"strong\",[t._v(\"线程之间共享进程中的数据。\")])]),t._v(\" \"),e(\"li\",[e(\"strong\",[t._v(\"当一个进程关闭之后，操作系统会回收进程所占用的内存。\")])]),t._v(\" \"),e(\"li\",[e(\"strong\",[t._v(\"进程之间的内容相互隔离。\")])])]),t._v(\" \"),e(\"p\",[t._v(\"如果JS是多线程的，一个线程在一个节点上添加了内容，另一个线程删除了这个节点，那么以哪个操作为准？所以必须要使用单线程，按顺序操作DOM。也不会出现多个线程。单线程的优势是开发方便，避免多线程下的死锁、竞争等问题，劣势是失去了并发能力。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"数据类型有哪些？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据类型有哪些？\"}},[t._v(\"#\")]),t._v(\" 数据类型有哪些？\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"code\",[t._v(\"JS\")]),t._v(\" 中分为七种内置类型，七种内置类型又分为两大类型：基本类型和对象（\"),e(\"code\",[t._v(\"Object\")]),t._v(\"）。\")]),t._v(\" \"),e(\"li\",[t._v(\"基本类型有七种： \"),e(\"code\",[t._v(\"null\")]),t._v(\"，\"),e(\"code\",[t._v(\"undefined\")]),t._v(\"，\"),e(\"code\",[t._v(\"boolean\")]),t._v(\"，\"),e(\"code\",[t._v(\"number\")]),t._v(\"，\"),e(\"code\",[t._v(\"string\")]),t._v(\"，\"),e(\"code\",[t._v(\"symbol\")]),t._v(\"，\"),e(\"code\",[t._v(\"bigint\")]),t._v(\"。\")]),t._v(\" \"),e(\"li\",[t._v(\"其中数字类型是浮点型的，没有整型，并且浮点类型基于 \"),e(\"code\",[t._v(\"IEEE 754\")]),t._v(\"标准实现，在使用中会遇到某些 Bug。\"),e(\"code\",[t._v(\"NaN\")]),t._v(\" 也属于 \"),e(\"code\",[t._v(\"number\")]),t._v(\" 类型，并且 \"),e(\"code\",[t._v(\"NaN\")]),t._v(\" 不等于自身。\")]),t._v(\" \"),e(\"li\",[t._v(\"原始类型没有函数调用，但是\"),e(\"code\",[t._v(\"'1'.toString()\")]),t._v(\" \"),e(\"code\",[t._v(\"'abc'.length\")]),t._v(\"被自动转换对象。\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"typeof\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#typeof\"}},[t._v(\"#\")]),t._v(\" typeof\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"code\",[t._v(\"typeof\")]),t._v(\" 对于基本类型，除了 \"),e(\"code\",[t._v(\"null\")]),t._v(\" 都可以显示正确的类型。\")]),t._v(\" \"),e(\"li\",[e(\"code\",[t._v(\"typeof\")]),t._v(\" 对于对象，除了\"),e(\"code\",[t._v(\"function\")]),t._v(\"都会显示 \"),e(\"code\",[t._v(\"object\")]),t._v(\"。\")])]),t._v(\" \"),e(\"p\",[t._v(\"在 JS 的最初版本中使用的是 32 位系统，为了性能考虑使用低位存储变量的类型信息，\"),e(\"code\",[t._v(\"000\")]),t._v(\"开头代表是对象，然而\"),e(\"code\",[t._v(\"null\")]),t._v(\"表示为全零，所以\"),e(\"code\",[t._v(\"typeof\")]),t._v(\"将它错误的判断为\"),e(\"code\",[t._v(\"object\")]),t._v(\"。但是后来因为null本身表示空的对象，所以并未进行修改。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"转换类型的转换方法\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#转换类型的转换方法\"}},[t._v(\"#\")]),t._v(\" 转换类型的转换方法\")]),t._v(\" \"),e(\"p\",[t._v(\"Number()\")]),t._v(\" \"),e(\"p\",[t._v(\"parseInt()\")]),t._v(\" \"),e(\"p\",[t._v(\"parseFloat()\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"类型转换\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#类型转换\"}},[t._v(\"#\")]),t._v(\" 类型转换\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"转Boolean\")])]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"在条件判断时，除了\"),e(\"code\",[t._v(\"undefined\")]),t._v(\"，\"),e(\"code\",[t._v(\"null\")]),t._v(\"，\"),e(\"code\",[t._v(\"false\")]),t._v(\"，\"),e(\"code\",[t._v(\"NaN\")]),t._v(\"，\"),e(\"code\",[t._v(\"''\")]),t._v(\"，\"),e(\"code\",[t._v(\"0\")]),t._v(\"，\"),e(\"code\",[t._v(\"-0\")]),t._v(\"，其他所有值都转为\"),e(\"code\",[t._v(\"true\")]),t._v(\"，包括所有对象。\")])]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"对象转原始类型\")])]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"p\",[t._v(\"对象在转换类型的时候，会调用内置的\"),e(\"code\",[t._v(\"[[ToPrimitive]]\")]),t._v(\"函数，对于该函数来说，算法逻辑一般来说如下：\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"p\",[t._v(\"如果已经是原始类型了，那就不需要转换了\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"调用\"),e(\"code\",[t._v(\"x.valueOf()\")]),t._v(\"，如果转换为基础类型，就返回转换的值\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"调用\"),e(\"code\",[t._v(\"x.toString()\")]),t._v(\"，如果转换为基础类型，就返回转换的值\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"如果都没有返回原始类型，就会报错。\")])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"重写\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" a \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"valueOf\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"toString\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'1'\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"Symbol\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"toPrimitive\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" a \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// => 3\")]),t._v(\"\\n\")])])])])])])]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"四则运算符\")])]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"p\",[t._v(\"+运算\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"运算中其中一方为字符串，那么就会把另一方也转换为字符串\")]),t._v(\" \"),e(\"li\",[t._v(\"如果一方不是字符串或者数字，那么会将它转换为数字或者字符串\")]),t._v(\" \"),e(\"li\",[t._v(\"但是 \"),e(\"code\",[t._v(\"i='1',i++ =2\")]),t._v(\",纯粹的数学运算。\")])])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"其他运算，只要其中一方是数字，那么另一方就会被转为数字\")])]),t._v(\" \"),e(\"li\",[e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'1'\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// '11' ，触发特点一，所以将数字1转换为字符串，得到结果'11'\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 2 ，触发特点二，所以将true转为数字1\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v('// \"41,2,3\" ，触发特点二，所以将数组通过toString转为字符串1,2,3，得到结果41,2,3')]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'a'\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'b'\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// -> \\\"aNaN\\\"    +'b'为NaN, +'1'快速获取Number类型\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'3'\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 12\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 0\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"4\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// NaN\")]),t._v(\"\\n\")])])])])]),t._v(\" \"),e(\"blockquote\",[e(\"p\",[t._v(\"对于加号需要注意这个表达式 \"),e(\"code\",[t._v(\"'a' + + 'b'\")])])]),t._v(\" \"),e(\"ul\",[e(\"li\",[e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'a'\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'b'\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v('// -> \"aNaN\"')]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 因为 + 'b' -> NaN\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 你也许在一些代码中看到过 + '1' -> 1\")]),t._v(\"\\n\")])])])])]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"比较运算符\")])]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"如果是对象，就通过\"),e(\"code\",[t._v(\"toPrimitive\")]),t._v(\"转换对象\")]),t._v(\" \"),e(\"li\",[t._v(\"如果是字符串，就通过\"),e(\"code\",[t._v(\"unicode\")]),t._v(\"字符索引来比较\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" a \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"valueOf\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"toString\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'1'\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\na \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\")])])]),e(\"p\",[e(\"strong\",[t._v(\"逻辑运算\")])]),t._v(\" \"),e(\"p\",[t._v(\"||  表示或者,前边成立给前边，前边不成立给后边\")]),t._v(\" \"),e(\"p\",[t._v(\"&& 表示并且前边成立给后边，前边不成立给前边\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"null和undefined的区别\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#null和undefined的区别\"}},[t._v(\"#\")]),t._v(\" null和undefined的区别?\")]),t._v(\" \"),e(\"p\",[t._v(\"1995年 JavaScript 诞生时，最初像 Java 一样，只设置了\"),e(\"code\",[t._v(\"null\")]),t._v('表示\"无\"。根据 C 语言的传统，'),e(\"code\",[t._v(\"null\")]),t._v(\"可以自动转为\"),e(\"code\",[t._v(\"0\")]),t._v(\"。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Number\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 0\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 5\")]),t._v(\"\\n\")])])]),e(\"p\",[t._v(\"上面代码中，\"),e(\"code\",[t._v(\"null\")]),t._v(\"转为数字时，自动变成0。\")]),t._v(\" \"),e(\"p\",[t._v(\"但是，JavaScript 的设计者 Brendan Eich，觉得这样做还不够。首先，第一版的 JavaScript 里面，\"),e(\"code\",[t._v(\"null\")]),t._v(\"就像在 Java 里一样，被当成一个对象，Brendan Eich 觉得表示“无”的值最好不是对象。其次，那时的 JavaScript 不包括错误处理机制，Brendan Eich 觉得，如果\"),e(\"code\",[t._v(\"null\")]),t._v(\"自动转为0，很不容易发现错误。\")]),t._v(\" \"),e(\"p\",[t._v(\"因此，他又设计了一个\"),e(\"code\",[t._v(\"undefined\")]),t._v(\"。区别是这样的：\"),e(\"code\",[t._v(\"null\")]),t._v(\"是一个表示“空”的对象，转为数值时为\"),e(\"code\",[t._v(\"0\")]),t._v(\"；\"),e(\"code\",[t._v(\"undefined\")]),t._v('是一个表示\"此处无定义\"的原始值，转为数值时为'),e(\"code\",[t._v(\"NaN\")]),t._v(\"。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Number\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"undefined\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// NaN\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"undefined\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// NaN\")]),t._v(\"\\n\")])])]),e(\"h2\",{attrs:{id:\"如何判断数据类型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#如何判断数据类型\"}},[t._v(\"#\")]),t._v(\" 如何判断数据类型?\")]),t._v(\" \"),e(\"p\",[t._v(\"typeof\")]),t._v(\" \"),e(\"p\",[t._v(\"instanceof  判断一个构造函数的原型是否在某个实例的原型链上。\")]),t._v(\" \"),e(\"p\",[t._v(\"constructor 一个实例继承了构造函数原型的constructor.\")]),t._v(\" \"),e(\"p\",[t._v(\"Object.prototype.toString.call()\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"js隐式装箱\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js隐式装箱\"}},[t._v(\"#\")]),t._v(\" JS隐式装箱\")]),t._v(\" \"),e(\"p\",[t._v('[] + [] = \"\"\\nstep1:( [].valueOf() = [] => [].toString() => \"\" 是字符串类型，也就是原始值，返回 \"\" )\\n所以 ToPrimitive([]) => \"\"\\nstep2: ToString(ToPrimitive([])).concat(ToString(ToPrimitive([]))) = \"\" + \"\" = \"\"')]),t._v(\" \"),e(\"p\",[t._v('[] + {} = \"[object Object]\"\\nstep1:( [].valueOf() = [] => [].toString() => \"\" 是字符串类型，也就是原始值，返回 \"\" )\\n所以 ToPrimitive([]) = \"\"\\nstep2:( {}.valueOf() = {} => [].toString() => \"[object Object]\" 是字符串类型，也就是原始值，返回 \"[object Object]\" )  所以 ToPrimitive({}) = \"[object Object]\"\\nstep3: ToString(ToPrimitive([])).concat(ToString(ToPrimitive({}))) = \"\" +\"[object Object]\" = \"[object Object]\"')]),t._v(\" \"),e(\"p\",[t._v(\"{} + [] = 0\\nstep1: 前面的 {} 会被当做空代码块忽略，所以只剩下 + [] 一个单目运算符，所以直接执行ToNumber([]) = 0\")]),t._v(\" \"),e(\"p\",[t._v('{} + {} = \"[object Object][object Object]\"')]),t._v(\" \"),e(\"h2\",{attrs:{id:\"判等\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#判等\"}},[t._v(\"#\")]),t._v(\" \"),e(\"a\",{attrs:{href:\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Equality_comparisons_and_sameness\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"判等\"),e(\"OutboundLink\")],1)]),t._v(\" \"),e(\"p\",[t._v(\"严格相等===：两个被比较的值在比较前都不进行隐式转换。如果两个值都是 number 类型，当两个都不是 NaN，并且数值相同，或是两个值分别为 +0 和 -0 时，两个值被认为是全等的。\")]),t._v(\" \"),e(\"p\",[t._v(\"非严格相等==：\"),e(\"code\",[t._v(\"ToNumber(A)\")]),t._v(\" 尝试在比较前将参数 A 转换为数字，这与 +A（单目运算符+）的效果相同。\"),e(\"code\",[t._v(\"ToPrimitive(A)\")]),t._v(\"通过尝试调用 A 的\"),e(\"code\",[t._v(\"A.toString()\")]),t._v(\" 和 \"),e(\"code\",[t._v(\"A.valueOf()\")]),t._v(\" 方法，将参数 A 转换为原始值（Primitive）。\")]),t._v(\" \"),e(\"p\",[t._v(\"同值相等：same-value进行比较。同值相等由 \"),e(\"a\",{attrs:{href:\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e(\"code\",[t._v(\"Object.is\")]),e(\"OutboundLink\")],1),t._v(\" 方法提供。\")]),t._v(\" \"),e(\"p\",[t._v(\"零值相等：与同值相等类似，不过会认为 +0 与 -0 相等。\")]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"x\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[t._v(\"y\")]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"==\")])]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"===\")])]),t._v(\" \"),e(\"th\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"Object.is\")])])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"undefined\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"undefined\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"null\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"null\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('\"foo\"')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('\"foo\"')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"0\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"0\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"+0\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"-0\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"0\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('\"\"')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('\"\"')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"0\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('\"0\"')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"0\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('\"17\"')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"17\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"[1,2]\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('\"1,2\"')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('new String(\"foo\")')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('\"foo\"')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"null\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"undefined\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"null\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"undefined\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('{ foo: \"bar\" }')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('{ foo: \"bar\" }')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('new String(\"foo\")')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('new String(\"foo\")')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"0\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"null\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"0\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"NaN\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v('\"foo\"')])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"NaN\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])])]),t._v(\" \"),e(\"tr\",[e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"NaN\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"NaN\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"false\")])]),t._v(\" \"),e(\"td\",{staticStyle:{\"text-align\":\"center\"}},[e(\"code\",[t._v(\"true\")])])])])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"循环方法有哪些？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#循环方法有哪些？\"}},[t._v(\"#\")]),t._v(\" 循环方法有哪些？\")]),t._v(\" \"),e(\"p\",[t._v(\"for in循环:循环遍历对象键值对，适用break和continue。会遍历原型链属性\")]),t._v(\" \"),e(\"p\",[e(\"em\",[e(\"strong\",[t._v(\"*Object.keys()*\")])]),t._v(\" \"),e(\"strong\",[t._v(\"自身可枚举属性\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"谈谈你对作用域链的理解\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#谈谈你对作用域链的理解\"}},[t._v(\"#\")]),t._v(\" 谈谈你对作用域链的理解?\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:a(569),alt:\"1589982146465\"}})]),t._v(\" \"),e(\"p\",[t._v(\"作用域链，原型链，还有冒泡我觉得都是js的一个共有的特性吧，都是自己里面找不到，就去他父亲那里找。\")]),t._v(\" \"),e(\"p\",[t._v(\"作用域链就是根据词法作用域，自己作用域找不到这个变量，就沿着作用域链去他父级的作用域找这个变量，直到查找到全局下，如果木有，说明这个变量不存在。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"闭包是什么？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#闭包是什么？\"}},[t._v(\"#\")]),t._v(\" 闭包是什么？\")]),t._v(\" \"),e(\"p\",[t._v(\"函数和对其周围状态(也就是函数定义时所在的词法环境)的引用捆绑在一起形成了闭包。\")]),t._v(\" \"),e(\"p\",[t._v(\"根据词法作用域规则，闭包可以让你从内部函数访问外部函数作用域。在 JavaScript 中，每当函数被创建，就会在函数生成时生成闭包。\")]),t._v(\" \"),e(\"p\",[t._v(\"在函数外部执行时，维持了一个对这个函数创建环境的引用。根据引用计数的规则，当有引用指向时，这个词法环境不被销毁。因此闭包缓存了他的周围状态。\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"makeAdder\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"x\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"y\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" x \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),t._v(\" y\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" add5 \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"makeAdder\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" add10 \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"makeAdder\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\nconsole\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"add5\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 7\")]),t._v(\"\\nconsole\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"add10\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 12\")]),t._v(\"\\n\")])])]),e(\"p\",[e(\"code\",[t._v(\"add5\")]),t._v(\" 和 \"),e(\"code\",[t._v(\"add10\")]),t._v(\" 都是闭包。它们共享相同的函数定义，但是保存了不同的词法环境。在 \"),e(\"code\",[t._v(\"add5\")]),t._v(\" 的环境中，\"),e(\"code\",[t._v(\"x\")]),t._v(\" 为 5。而在 \"),e(\"code\",[t._v(\"add10\")]),t._v(\" 中，\"),e(\"code\",[t._v(\"x\")]),t._v(\" 则为 10。\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"闭包作用:\")])]),t._v(\" \"),e(\"p\",[t._v(\"首先的话闭包可以从外部访问到函数内部的变量，并且这些被访问到的变量会被缓存起来。并且使得内部变量不会被污染。但是闭包函数因为一直有引用指向他所以会一直存在内存\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#\"}},[t._v(\"#\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"原型以及原型链\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#原型以及原型链\"}},[t._v(\"#\")]),t._v(\" 原型以及原型链\")]),t._v(\" \"),e(\"p\",[t._v(\"每个函数都有一个prototype指向构造函数的原型，我们可以把方法放在原型上，从而减少内存占用。\")]),t._v(\" \"),e(\"p\",[t._v(\"每个原型都有个constructor属性指向构造函数。\")]),t._v(\" \"),e(\"p\",[t._v(\"构造函数通过new实例化出一个对象，对象的__proto__属性指向构造函数的原型。\")]),t._v(\" \"),e(\"p\",[t._v(\"原型链就和作用域链，还有事件冒泡差不多的一个概念，当访问实例的属性方法时，如果他没有，就去原型上找，，如果还是找不到就去原型的原型找，直到找到Object的原型，在网上找就是null了。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"面向对象多态是指的什么\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#面向对象多态是指的什么\"}},[t._v(\"#\")]),t._v(\" 面向对象多态是指的什么\")]),t._v(\" \"),e(\"p\",[t._v(\"一个方法有不同的参数传入，从而输出不同结果\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"this指向问题\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#this指向问题\"}},[t._v(\"#\")]),t._v(\" this指向问题\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"this的绑定只受最靠近成员的引用的影响，是他执行时的this而不是定义时的this,是调用他的this\")]),t._v(\"。\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"new>bind>call(apply)> 隐式绑定>obj.func()>默认绑定\")])]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"this绑定主要有默认绑定，隐式绑定 ,隐式丢失，new绑定，显示绑定。\")])]),t._v(\" \"),e(\"p\",[t._v(\"箭头函数绑定了父级作用域的上下文\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"默认绑定\")]),t._v(\":全局，函数独立调用，闭包\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"隐式绑定\")]),t._v(\":\"),e(\"code\",[t._v(\"obj1.foo();//this是obj1,obj1.obj2.foo();//this是obj2\")])]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"隐式丢失\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"p\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"foo \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" o\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//此时this是全局   var bar = (p.foo = o.foo)\")]),t._v(\"\\n\")])])]),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[t._v(\"p\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"foo \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" o\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \\np\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"foo\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//4 此时this指向p。\")]),t._v(\"\\n\")])])]),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"foo \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" obj\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//window 立即执行\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"false\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"||\")]),t._v(\" obj\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//window\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"obj\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"foo\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//window\")]),t._v(\"\\n\")])])]),e(\"p\",[e(\"strong\",[t._v(\"显示绑定\")])]),t._v(\" \"),e(\"p\",[t._v(\"通过call()、apply()、bind()方法把对象绑定到this上，叫做显示绑定。对于被调用的函数来说，叫做间接调用\")]),t._v(\" \"),e(\"p\",[t._v(\"显示绑定无法解决隐式丢失问题。bind是永久绑定，之后再怎么调用都不会起作用.\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"f\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"a\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" g \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"f\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"bind\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"a\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"azerty\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"g\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// azerty\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" h \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"g\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"bind\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"a\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'yoo'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// bind只生效一次！\")]),t._v(\"\\nconsole\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"h\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// azerty\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" o \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"a\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"37\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" f\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"f\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" g\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"g\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" h\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\"h\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"o\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"f\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" o\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"g\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" o\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"h\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 37, azerty, azerty\")]),t._v(\"\\n\")])])]),e(\"p\",[e(\"strong\",[t._v(\"迭代api绑定\")])]),t._v(\" \"),e(\"p\",[t._v(\"javascript中新增了许多内置函数，具有显式绑定的功能，如数组的5个迭代方法：\"),e(\"code\",[t._v(\"map()\")]),t._v(\"、\"),e(\"code\",[t._v(\"forEach()\")]),t._v(\"、\"),e(\"code\",[t._v(\"filter()\")]),t._v(\"、\"),e(\"code\",[t._v(\"some()\")]),t._v(\"、\"),e(\"code\",[t._v(\"every()\")])]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"new 绑定\")])]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"严格模式\")])]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"独立调用的函数的this指向undefined\")]),t._v(\" \"),e(\"li\",[t._v(\"使用call和apply时，null和undefined不会转换成全局对象，如果不指定的话会出错\")])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"dom\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dom\"}},[t._v(\"#\")]),t._v(\" DOM\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"什么是dom？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是dom？\"}},[t._v(\"#\")]),t._v(\" 什么是DOM？\")]),t._v(\" \"),e(\"p\",[t._v(\"DOM是浏览器提供给es用来操作HTML的api。\")]),t._v(\" \"),e(\"ul\",[e(\"li\",[t._v(\"DOM节点\")]),t._v(\" \"),e(\"li\",[t._v(\"DOM事件\")])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"dom操作有什么问题？如何高效操作dom？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dom操作有什么问题？如何高效操作dom？\"}},[t._v(\"#\")]),t._v(\" DOM操作有什么问题？如何高效操作DOM？\")]),t._v(\" \"),e(\"p\",[t._v(\"现在的浏览器都是多进程浏览器，而渲染进程里又有webkit引擎的分支blink渲染引擎(浏览器内核)和V8引擎，他们都是单线程，每次DOM操作时都会从JS引擎切换到渲染引擎执行渲染，然后切换回JS引擎，频繁的引擎切换是相当耗时的。并且会引起重排和重绘。\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"高效操作DOM\")])]),t._v(\" \"),e(\"ol\",[e(\"li\",[e(\"p\",[t._v(\"对DOM结果进行操作\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" times\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  document\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"width \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),t._v(\" console\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//改为\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" width \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" document\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"width\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" times\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  body \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"?\")]),t._v(\" console\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"void\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])])]),t._v(\" \"),e(\"li\",[e(\"p\",[t._v(\"字符串拼接操作并进行innerHTML插入字符串\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" times \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10000\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" times\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" div \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" document\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"createElement\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'div'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n  document\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"body\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"appendChild\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"div\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\nconsole\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"timeEnd\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'createElement'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 54.964111328125ms\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" html\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"''\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"for\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\" times\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" i\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"++\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  html\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+=\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'<div></div>'\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\ndocument\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"body\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"innerHTML \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+=\")]),t._v(\" html \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 31.919921875ms\")]),t._v(\"\\nconsole\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"timeEnd\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'innerHTML'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n\")])])])])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"dom事件操作优化\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dom事件操作优化\"}},[t._v(\"#\")]),t._v(\" DOM事件操作优化\")]),t._v(\" \"),e(\"p\",[t._v(\"防抖\")]),t._v(\" \"),e(\"p\",[t._v(\"节流\")]),t._v(\" \"),e(\"p\",[t._v(\"事件委托\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"获取元素方法\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#获取元素方法\"}},[t._v(\"#\")]),t._v(\" 获取元素方法\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[t._v(\"getElementById \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//Id重复了获取第一个 ie6-7会把表单name作为id\")]),t._v(\"\\ngetElementsByTagName\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//获取所有标签名为div的\")]),t._v(\"\\ngetElementsByClassName \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//ie678不兼容\")]),t._v(\"\\ngetElementsByName \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//ie浏览器只对表单元素name起作用\")]),t._v(\"\\nquerySelector\\nquerySelectorAll  \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//不兼容ie6-8 没有dom映射  获取到的是 NodeList 对象而不是HTMLElemen 的实例\")]),t._v(\"\\n\\n\")])])]),e(\"h3\",{attrs:{id:\"节点操作\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#节点操作\"}},[t._v(\"#\")]),t._v(\" 节点操作\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[e(\"p\",[e(\"strong\",[t._v(\"新建节点\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[t._v(\"document\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"createElement\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'div'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//新建元素节点\")]),t._v(\"\\ndocument\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"createArrtibute\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'src'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//新建一个属性节点\")]),t._v(\"\\ndocument\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"createTextNode\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"文本内容\"')]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 创建一个文本节点\")]),t._v(\"\\ndocument\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"createDocumentFragment\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 新建一个 DOM 片段\")]),t._v(\"\\n\")])])])]),t._v(\" \"),e(\"li\",[e(\"p\",[e(\"strong\",[t._v(\"添加、移除、替换、插入\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"appendChild\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 向节点的子节点末尾添加新的子节点\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"removerChild\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 移除\")]),t._v(\"\\nparentNode\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"replaceChild\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"newChild\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" oldChild \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"用新节点替换父节点中已有的子节点\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"insertBeform\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 在已有的子节点前插入一个新的子节点\")]),t._v(\"\\n\")])])])]),t._v(\" \"),e(\"li\",[e(\"p\",[e(\"strong\",[t._v(\"查找\")])]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[t._v(\"document\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getElementById\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 通过元素 id 查找,唯一性 \")]),t._v(\"\\ndocument\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getElementByClassName\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 通过 class 名称查找 \")]),t._v(\"\\ndocument\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getElementsByTagName\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 通过标签名称查找 \")]),t._v(\"\\ndocument\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getElementsByName\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 通过元素的 Name 属性的值查找\")]),t._v(\"\\n\")])])])])]),t._v(\" \"),e(\"h3\",{attrs:{id:\"dom-回流、重绘\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dom-回流、重绘\"}},[t._v(\"#\")]),t._v(\" DOM 回流、重绘\")]),t._v(\" \"),e(\"ol\",[e(\"li\",[t._v(\"更新了元素的几何属性（重排/回流reflow）\")])]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:a(570),alt:\"image-20200611151714753\"}})]),t._v(\" \"),e(\"p\",[t._v(\"如果你通过 JavaScript 或者 CSS 修改元素的几何位置属性，例如：页面中的元素增加、删除、大小、位置的改变，那么浏览器会触发重新布局，分层，绘制，解析之后的一系列子阶段，这个过程就叫\"),e(\"strong\",[t._v(\"重排\")]),t._v(\"。无疑，\"),e(\"strong\",[t._v(\"重排需要更新完整的渲染流水线，所以开销也是最大的\")]),t._v(\"。\")]),t._v(\" \"),e(\"ol\",{attrs:{start:\"2\"}},[e(\"li\",[e(\"p\",[t._v(\"更新元素的绘制属性（重绘）\")]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:a(571),alt:\"image-20200611153109676\"}})])])]),t._v(\" \"),e(\"p\",[t._v(\"如果修改了元素的背景颜色，那么布局阶段将不会被执行，因为并没有引起几何位置的变换，所以就直接进入了绘制阶段，然后执行之后的一系列子阶段，这个过程就叫\"),e(\"strong\",[t._v(\"重绘\")]),t._v(\"。相较于重排操作，\"),e(\"strong\",[t._v(\"重绘省去了布局和分层阶段，所以执行效率会比重排操作要高一些\")]),t._v(\"。\")]),t._v(\" \"),e(\"ol\",{attrs:{start:\"3\"}},[e(\"li\",[t._v(\"直接合成\")])]),t._v(\" \"),e(\"p\",[e(\"img\",{attrs:{src:a(572),alt:\"image-20200611154332124\"}})]),t._v(\" \"),e(\"p\",[t._v(\"使用了 CSS 的 transform 来实现动画效果，这可以避开重排和重绘阶段，直接在非主线程上执行合成动画操作。这样的效率是最高的，因为是在非主线程上合成，并没有占用主线程的资源，另外也避开了布局和绘制两个子阶段，所以\"),e(\"strong\",[t._v(\"相对于重绘和重排，合成能大大提升绘制效率\")]),t._v(\"。\")]),t._v(\" \"),e(\"p\",[t._v(\"在 JS 中把设置样式和获取样式的两种操作分来来写， 设置样式的操作放在 一起，读取样式的操作放在一起，这样可以有效的减少 DOM 的回流和重绘；\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"js盒子模型\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js盒子模型\"}},[t._v(\"#\")]),t._v(\" JS盒子模型\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[t._v(\"client系列：clientWidth，clientHeight，clientLeft，clientTop；\\n\\noffset系列： offsetWidth，offsetHeight，offsetLeft，offsetTop，offsetParent\\n\\nscroll系列：scrollWidth，scrollHeight，scrollLeft，scrollTop\\n\")])])]),e(\"p\",[t._v(\"// client offset scroll width height left top\")]),t._v(\" \"),e(\"p\",[t._v(\"// clientWidth 内容宽度 + 左右 padding\")]),t._v(\" \"),e(\"p\",[t._v(\"// offsetWidth clientWidth + 左右 border\")]),t._v(\" \"),e(\"p\",[t._v(\"// offsetTop 当前盒子的外边框到上级参照物的内边框的偏移量\")]),t._v(\" \"),e(\"p\",[t._v(\"// offsetParent 上级参照物：有定位的上级（包含 父级，祖父，曾祖父...）\")]),t._v(\" \"),e(\"p\",[t._v(\"元素，所有所有上级都没有定位， 则参照物就是 body\")]),t._v(\" \"),e(\"p\",[t._v(\"// scroll 内容不溢出 等同于 client\")]),t._v(\" \"),e(\"p\",[t._v(\"// 内容溢出时 没有设置 overflow 值是内容宽高 + 上或左 padding\")]),t._v(\" \"),e(\"p\",[t._v(\"// 内容溢出时 有设置 overflow 时 值是内容宽高 + 上下或左右 padding\")]),t._v(\" \"),e(\"p\",[t._v(\"// scrollTop 卷去内容的高度\")]),t._v(\" \"),e(\"p\",[t._v(\"// 13 个属性 只有 scrollTop 和 scrollLeft 时可以设置值的， 其他的都是只读\")]),t._v(\" \"),e(\"p\",[t._v(\"属性\")]),t._v(\" \"),e(\"h3\",{attrs:{id:\"dom事件标准\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dom事件标准\"}},[t._v(\"#\")]),t._v(\" DOM事件标准\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"DOM事件级别是什么？\")])]),t._v(\" \"),e(\"p\",[t._v(\"DOM0  div.onclick = function(){}\")]),t._v(\" \"),e(\"p\",[t._v(\"DOM2  div.addEventListener('click',function(){},false)\")]),t._v(\" \"),e(\"p\",[t._v(\"DOM3  div.addEventListener('keyup',function(){},false)  多了一些鼠标和键盘事件\")]),t._v(\" \"),e(\"p\",[t._v(\"IE标准DOM2：div.attachEvent('')\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"事件的传播机制(事件模型)\")]),t._v(\"：\")]),t._v(\" \"),e(\"p\",[t._v(\"先冒泡，然后是目标阶段 然后再去捕获，我们可以利用事件的冒泡来进行事件委托，、也就是可以在父元素上绑定事件，通过事件对象 e 来判断点击的具体元素；可以提高性能；\")]),t._v(\" \"),e(\"p\",[t._v(\"我们可以利用的 e.stopPropagation()来阻止冒泡；利用 e.preventDefault()来阻止默认事件\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"DOM事件流？\")])]),t._v(\" \"),e(\"p\",[t._v(\"一个完整的事件流分三个阶段，事件通过捕获到达目标元素，然后从目标元素冒泡到window对象。\")]),t._v(\" \"),e(\"p\",[e(\"strong\",[t._v(\"描述DOM事件捕获具体流程？\")])]),t._v(\" \"),e(\"p\",[t._v(\"因为DOM是windows下的一个属性，所以说首先是从window对象开始，然后传递到他的子属性document对象，之后传递到html对象也就是 document.documentElement,然后传递到body,之后就按照body内部的结构传递最后传递到目标元素。\")]),t._v(\" \"),e(\"p\",[t._v(\"window>document>html(js里如何获取html? document.documentElement)>body>按照html结构来传。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"event对象的常见应用是什么？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#event对象的常见应用是什么？\"}},[t._v(\"#\")]),t._v(\" Event对象的常见应用是什么？\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[t._v(\"event\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"preventDefault\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//.prevent\")]),t._v(\"\\nevent\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"stopPropagation\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//阻止冒泡 vue里是.stop\")]),t._v(\"\\n  event\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"stopImmediatePropagation\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//如果注册了两个事件a,b，在a点击不执行b,在a里加这句话,b就不被执行;  事件响应优先级\")]),t._v(\"\\nevent\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"currentTarget \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \\nevent\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"target  \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//事件委托/代理。  实际被点击的元素。 e.srcElement;\")]),t._v(\"\\n\")])])]),e(\"div\",{staticClass:\"language- extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[e(\"code\",[t._v(\"document.body.onclick = function(e){\\n    e = e || window.event;\\n    t = e.target || e.srcElement;\\n    var url = t.href;\\n    load_page(url);\\n};\\n\\n\")])])]),e(\"h2\",{attrs:{id:\"你会自定义事件吗？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#你会自定义事件吗？\"}},[t._v(\"#\")]),t._v(\" 你会自定义事件吗？\")]),t._v(\" \"),e(\"p\",[t._v(\"按钮不是常规click事件而不是回调\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//创建事件, Event是无法传递参数的\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" event \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Event\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'build'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//创建事件, CustomEvent是可以传递参数的\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" event \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"CustomEvent\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'build'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" detail\"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\":\")]),t._v(\" elem\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"dataset\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"time \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 监听事件Listen for the event.\")]),t._v(\"\\nelem\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"addEventListener\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'build'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"e\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//... }, false);\")]),t._v(\"\\n\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 分发/触发事件Dispatch the event.\")]),t._v(\"\\nelem\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"dispatchEvent\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"event\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])])]),e(\"p\",[t._v(\"new Event无法加数据，\")]),t._v(\" \"),e(\"p\",[t._v(\"CustomEvent('name',object);\")]),t._v(\" \"),e(\"div\",{staticClass:\"language-js extra-class\"},[e(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[e(\"code\",[e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" eve \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Event\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'test'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\ndiv1\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"addEventListener\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'test'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  console\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'触发'\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setTimeout\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  div1\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),e(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"dispatchEvent\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"eve\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),e(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1000\")]),e(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])])]),e(\"h2\",{attrs:{id:\"document-write-和innerhtml区别\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#document-write-和innerhtml区别\"}},[t._v(\"#\")]),t._v(\" document.write()和innerHTML区别\")]),t._v(\" \"),e(\"table\",[e(\"thead\",[e(\"tr\",[e(\"th\"),t._v(\" \"),e(\"th\",[t._v(\"document.write()\")]),t._v(\" \"),e(\"th\",[t._v(\"innerHTML\")])])]),t._v(\" \"),e(\"tbody\",[e(\"tr\",[e(\"td\",[t._v(\"类型\")]),t._v(\" \"),e(\"td\",[t._v(\"document对象下的方法\")]),t._v(\" \"),e(\"td\",[t._v(\"element对象的属性\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",[t._v(\"插入位置\")]),t._v(\" \"),e(\"td\",[t._v(\"脚本元素script的位置\")]),t._v(\" \"),e(\"td\",[t._v(\"指定元素内\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",[t._v(\"拼接方法\")]),t._v(\" \"),e(\"td\",[t._v(\"可以多次调用拼接\")]),t._v(\" \"),e(\"td\",[t._v(\"利用+=拼接\")])]),t._v(\" \"),e(\"tr\",[e(\"td\",[t._v(\"覆盖问题\")]),t._v(\" \"),e(\"td\",[t._v(\"文档解析load完在调用后悔覆盖文档\")]),t._v(\" \"),e(\"td\",[t._v(\"直接调用会覆盖原内容\")])])])]),t._v(\" \"),e(\"h2\",{attrs:{id:\"面向对象是什么？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#面向对象是什么？\"}},[t._v(\"#\")]),t._v(\" 面向对象是什么？\")]),t._v(\" \"),e(\"p\",[t._v(\"函数产生了一个对象，这个函数就是类。\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"数组常用方法有哪些？\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组常用方法有哪些？\"}},[t._v(\"#\")]),t._v(\" 数组常用方法有哪些？\")]),t._v(\" \"),e(\"p\",[t._v(\"增删改的方法:push pop shift unshift splice\")]),t._v(\" \"),e(\"p\",[t._v(\"数组查询和拼接的方法: slice和concat\")]),t._v(\" \"),e(\"p\",[t._v(\"转换字符串的方法:toString和join\")]),t._v(\" \"),e(\"p\",[t._v(\"检测是否有某项的方法:indexOf includes\")]),t._v(\" \"),e(\"p\",[t._v(\"数组排序方法：sort reverse\")]),t._v(\" \"),e(\"p\",[t._v(\"数组遍历方法：forEach map some every filter find\")]),t._v(\" \"),e(\"p\",[t._v(\"es6的方法 :Array.of Array.from   find findIndex  fill填充  entires keys values flat includes flatMap....................\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"_0-1-0-2\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_0-1-0-2\"}},[t._v(\"#\")]),t._v(\" 0.1+0.2 =?\")]),t._v(\" \"),e(\"p\",[t._v(\"计算机无法处理十进制，只能处理2进制。js采用IEEE754 64位双精度标准。十进制的0.1转换成2进制，0.1*2=0.2，整数部分是0 。。。。0.8 *2 =1.6整数部分是1， 0.6 * 2 = 1.2........这是个无线循环的小数。然后会使用二进制位科学计数法表示他，但是js有长度限制，所以二进制位科学计数法表示的是一个省略了小数点十位后的结果，因此做加法时会有误差。\")]),t._v(\" \"),e(\"p\",[t._v(\"(0.1+0.2).toFixed(5)*1 //保留五位小数\")]),t._v(\" \"),e(\"h2\",{attrs:{id:\"-2\"}},[e(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#-2\"}},[t._v(\"#\")])])])}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}